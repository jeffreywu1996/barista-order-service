version: "3.9"

services:
  order-service:
    build:
      context: ./
      dockerfile: docker/Dockerfile.order-service
    hostname: order-service
    container_name: order-service
    depends_on:
      db_postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    ports:
      - 8000:8000
    env_file:
      - .env
    volumes:
      - ./:/home/app
    networks:
      - barista
    healthcheck:
      test: curl --fail http://localhost:8000 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  barista-service:
    build:
      context: ./
      dockerfile: docker/Dockerfile.barista-service
    hostname: barista-service
    container_name: barista-service
    depends_on:
      rabbitmq:
        condition: service_healthy
      order-service:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./:/home/app
    networks:
      - barista

  db_postgres:
    image: postgres:14.3-alpine
    hostname: db_postgres
    container_name: db_postgres
    restart: on-failure
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    volumes:
      - db-postgres:/var/lib/postgresql/data
      - ./scripts/create_databases.sql:/docker-entrypoint-initdb.d/create_databases.sql
    networks:
      - barista

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 15672:15672
      - 5672:5672
      - 1883:1883
    networks:
      - barista
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5
      # start_period: 10s

volumes:
  db-postgres:
    driver: local

networks:
  barista:
    # external: true
